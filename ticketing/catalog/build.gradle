plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'ticketing'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    implementation project(":common")

    implementation 'io.micrometer:micrometer-registry-prometheus'

    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:mysql:1.20.3'
    testImplementation 'org.testcontainers:jdbc:1.20.3'

    // üß™ ÏÑ†ÌÉù: Redis ÌÜµÌï©ÌÖåÏä§Ìä∏
    testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
    testImplementation 'org.testcontainers:testcontainers:1.20.3'

    // üìà Í¥ÄÏ∏°ÏÑ±
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-otlp'
}

tasks.named('test') {
    useJUnitPlatform()
    ignoreFailures = false
}

jib {
    from {
        image = 'eclipse-temurin:17-jre'
    }
    to {
        image = "ghcr.io/tpdus751/catalog:latest"
    }
    container {
        jvmFlags = ['-Dspring.profiles.active=prod']
        ports = ['8080']
    }
}
