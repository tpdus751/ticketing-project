spring:
  application:
    name: reservation-api
  jackson:
    serialization:
      write-dates-as-timestamps: false
  kafka:
    admin:
      properties:
        auto.create.topics.enable: true
    bootstrap-servers: kafka:29092
    consumer:
      group-id: reservation-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    redis:
      host: redis
      port: 6379
      timeout: 500ms    # Redis 응답 타임아웃
      lettuce:
        pool:
          max-active: 200   # 동시 커넥션 수 확장
          max-idle: 50
          min-idle: 10
          max-wait: 200ms   # 커넥션 대기시간 제한 (기본은 무제한 → 병목)
  datasource:
    url: jdbc:mysql://mysql:3306/ticketing
    username: ticket
    password: ticketpw
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 100   # 기본 10, 지금은 30인데 최소 100 이상 권장
      minimum-idle: 10
      connection-timeout: 2000 # 대기 최대 2s (그 이상은 의미없음)
      max-lifetime: 30000   # 커넥션 30초 후 교체
      idle-timeout: 10000   # 10초 이상 놀면 반납
  jpa:
    hibernate:
      ddl-auto: none   # ✅ Hibernate가 테이블 생성/수정하지 않도록
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    jdbc:
      time_zone: Asia/Seoul

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    service:
      name: reservation-api
  otlp:
    tracing:
      endpoint: http://jaeger:4318/v1/traces

server:
  port: 8081
