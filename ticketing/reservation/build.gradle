plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ticketing'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(":common")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	runtimeOnly 'io.opentelemetry:opentelemetry-exporter-otlp'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// --- Kafka ---
	implementation 'org.springframework.kafka:spring-kafka'

	// ✅ 추가
	testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
	testImplementation 'org.testcontainers:mysql:1.20.3'
	testImplementation 'org.testcontainers:jdbc:1.20.3'
	testImplementation 'org.testcontainers:testcontainers:1.20.3'
}

tasks.named('test') {
	useJUnitPlatform()
	// Gradle 8 이상에서는 아래 옵션으로 대체
	ignoreFailures = true   // 테스트가 없어도 빌드 실패하지 않음
}

